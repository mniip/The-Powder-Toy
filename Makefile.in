CC= @CC@
CXX= @CXX@

OUT= build

CPPFLAGS+= @CPPFLAGS@
CFLAGS+= @CFLAGS@
CXXFLAGS+= @CXXFLAGS@ 
LDFLAGS+= @LDFLAGS@

ifdef VERBOSE
V=@echo >/dev/null 
Q=
else
V=@echo 
Q=@
endif

SRCXX= $(patsubst src/%,%,$(wildcard src/*.cpp) $(wildcard src/*/*.cpp) $(wildcard src/gui/*/*.cpp) $(wildcard src/client/*/*.cpp) $(wildcard src/simulation/elements/*.cpp) $(wildcard src/simulation/tools/*.cpp))

ifeq (@luasocket@,true)
SRC= $(patsubst src/%,%,$(wildcard src/socket/*.c))
endif

$(OUT)/%.o: src/%.cpp
	@mkdir -p "$(dir $@)"
	$(V)"  [DEP] $<"
	$(Q)$(CXX) -M $(CPPFLAGS) -o $(OUT)/$*.d $<
	$(V)"  [CXX] $@"
	$(Q)$(CXX) -c $< $(CPPFLAGS) $(CXXFLAGS) -o $@

-include $(SRCXX:.cpp=.d)

$(OUT)/%.o: src/%.c
	@mkdir -p "$(dir $@)"
	$(V)"  [DEP] $<"
	$(Q)$(CC) -M $(CPPFLAGS) -o $(OUT)/$*.d $<
	$(V)"  [CC ] $@"
	$(Q)$(CC) -c $< $(CPPFLAGS) $(CFLAGS) -o $@

-include $(SRC:.c=.d)

powder: $(SRCXX:%.cpp=$(OUT)/%.o) $(SRC:%.c=$(OUT)/%.o)
	$(V)"  [CXX] $@"
	$(Q)$(CC) $^ $(LDFLAGS) -o $@

all: powder

clean:
	rm -rf powder $(OUT)/*

.PHONY: all clean
